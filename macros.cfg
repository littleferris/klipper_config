#Macros

[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit2.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="wifi-switch",
                             state="off")}

[gcode_macro Motors_Off]
gcode:
   M18    
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G28                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    SET_GCODE_OFFSET Z=0.14
    #dwell P=5

[gcode_macro ABS]
gcode:
    SET_GCODE_OFFSET Z=0.16

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    
[gcode_macro LOAD_FILAMENT]
gcode:
   SAVE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
   M83                            ; set extruder to relative
   G1 E325 F1800                  ; quickly load filament to down bowden
   G1 E5 F300                    ; slower extrusion for hotend path
   G1 E10 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
   #Motors_Off                     ;Turns off motors
   RESTORE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
   
[gcode_macro UNLOAD_FILAMENT]
gcode:
   SAVE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-15 F300                   ; slowly retract to grab all filament
   G1 E-350 F1800                 ; retract filament completely
   M82                            ; set extruder to absolute
   #M104 S0                        ; Turn off hotend
   #Motors_Off                     ;Turns off motors
   RESTORE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
   
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
default_parameter_X: 100
default_parameter_Y: 100
default_parameter_Z: 10
gcode:
    M18
    M104 S0
    M140 S0
    M141 S0
    M106 S0
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 100
default_parameter_Y: 100
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    G91
    
[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    G1 E1.7 F2100
    G91
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
            
[gcode_macro dwell]
default_parameter_P: 0
variable_timervalue: 0
gcode:	
  SET_GCODE_VARIABLE MACRO=dwell VARIABLE=timervalue VALUE={P}
	{% for timer in range( (P|int * 60),0,-1) %}
		M117 { (timer|int // 60) }:{ '%02d' %  (timer|int - (60 * (timer|int // 60)))  }
		G4 P1000
	{% endfor %}
	M117

[gcode_macro PREHEAT_CHAMBER]
gcode:
    G28
    G1 X60 Y60
    M117 Preheating 
    M190 S110
    M106 S255 
    {% if printer['temperature_sensor enclosure_temp'].temperature < 35 %}
        M190 S110
        TEMPERATURE_WAIT SENSOR='temperature_sensor enclosure_temp' MINIMUM=35      
    {% endif %}
    M117 Ready to Print

[gcode_macro START_PRINT]
default_parameter_BED_TEMP: 115 #target bed temperature
default_parameter_EXTRUDER_TEMP: 245 #target extruder temperature
default_parameter_SOAK:0 #soak time (minutes)
#variable_level: 0 #QGL bed leveling flag. Not a user parameter.
gcode:
        M117 Starting Warmup

        #if the bed is already at the correct target temp, we assume no heat soak is necessary.
        {% if (SOAK|int) <= 0 or (printer.heater_bed.target >= (BED_TEMP|int - 15)) %}

           
        {% else %}
           M117 Heating for Soak
           M190 S{BED_TEMP}
           M117 Starting Soak
           {% for timer in range( SOAK|int,0,-1) %}
              #we cycle once a minute, so we can send an update to keep octoprint happy, rather than just sleeping for the entire soak
              M117 Soak: {timer|int}m remaining
              M105
              G4 P60000
              
           {% endfor %}
           M117 Soak Complete
        {% endif %}

        M190 S{BED_TEMP}
        M109 S{EXTRUDER_TEMP}

        G32

        G1 Z5 F5000
        M117 Purging
        PURGE
        M83
        G1 E2 F1500 # deretract
        M117 Starting Print
        UPDATE_DELAYED_GCODE ID=CLEAR_DISP DURATION=10
        	                                

[delayed_gcode M191-Wait]
gcode:
    {% if printer["temperature_sensor enclosure_temp"].temperature >= printer["gcode_macro M191"].chambertargettemp|int %} ; ##IF CHAMBER TEMP IS REACHED##
        { action_respond_info("Chamber at or above temp, continuing...") }
            {% if printer.pause_resume.is_paused %}
                RESUME                                                                                                        ; break loop, resume print
            {% endif %}
    {% else %}                                                                                                             ; ##IF CHAMBER TEMP IS NOT YET REACHED##
        { action_respond_info("Chamber not at temp yet, waiting...") }
        UPDATE_DELAYED_GCODE ID=M191-Wait DURATION=5                                                                        ; continue waiting loop
    {% endif %}